% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/text.R
\name{shrink_values}
\alias{shrink_values}
\title{Collapse a Vector of Values into a Single String}
\usage{
shrink_values(
  values,
  collapse = ";",
  all = "unique",
  dropNA = T,
  exclude = NULL,
  fillempty = NULL,
  force.char = T,
  do.sort = FALSE
)
}
\arguments{
\item{values}{A vector of values (numeric, character, or logical) to be collapsed.}

\item{collapse}{A string used to join the values (default: \code{";"}).}

\item{all}{Logical. If \code{TRUE}, keep duplicates; if \code{FALSE} (default), apply \code{unique()} before collapsing.}

\item{dropNA}{Logical. If \code{TRUE} (default), remove \code{NA} values from the input before collapsing.}

\item{exclude}{Optional vector of values to exclude from the result.}

\item{fillempty}{Value to return when the result is empty after filtering (default: \code{NULL}).}

\item{force.char}{Logical. If \code{TRUE} (default), coerce values to character before collapsing.}

\item{do.sort}{Logical. If \code{TRUE}, sort values before collapsing. If \code{FALSE}, keep original order.}
}
\value{
A single character string (or a scalar value, if length 1), representing the collapsed input.
}
\description{
Converts a vector of values into a single string with optional filtering, NA removal, sorting, and type coercion.
Useful for summarizing grouped values in tables (e.g., collapsing multiple values into one cell).
}
\details{
\itemize{
\item If \code{values} has only one unique element (after filtering), that value is returned directly (not collapsed).
\item If all elements are removed after filtering and \code{fillempty} is provided, that value is returned.
\item Uses helper functions: \verb{\%!in\%} for exclusion, \code{na.omitva()} (variant of \code{na.omit()}), and \code{not.na()} to check truthy sort flag.
}
}
\examples{
shrink_values(c("A", "B", "A"))                         # "A;B"
shrink_values(c("X", "Y", NA), dropNA = TRUE)           # "X;Y"
shrink_values(c("a", "b", "c"), exclude = "b")          # "a;c"
shrink_values(c("Z", NA), dropNA = TRUE, fillempty = "-")  # "Z"
shrink_values(c(3, 1, 2), do.sort = TRUE)               # "1;2;3"

}
